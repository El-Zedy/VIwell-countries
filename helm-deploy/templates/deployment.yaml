apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.deployment.name }}
  name: {{ .Values.deployment.name }}
  namespace: {{ .Values.namespace }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.deployment.name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      labels:
        app: {{ .Values.deployment.name }}
    spec:
      containers: 
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Values.deployment.name }}
        ports:
        - containerPort: {{ .Values.container.port }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: {{ .Values.path_liveness }}
            port: {{ .Values.port_liveness }}
            scheme: HTTP
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5        
        name: {{ .Values.deployment.name }}
        ports:
        - containerPort: {{ .Values.container.port }}
          protocol: TCP
        readinessProbe:
          httpGet:
            path: {{ .Values.path_readiness }}
            port: {{ .Values.port_readiness }}
            scheme: HTTP
          failureThreshold: 5
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          {{- toYaml .Values.resources | nindent 12 }}

        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}